FROM node:lts-alpine AS base

ENV PNPM_HOME=/usr/local/bin

# Build stage
FROM base AS build
WORKDIR /app

RUN apk add --no-cache --virtual .gyp python3 make g++
RUN corepack enable && corepack prepare pnpm@latest --activate

COPY package*.json ./
COPY pnpm-lock.yaml ./

RUN pnpm install --frozen-lockfile || npm install --production
RUN (pnpm install --global @nestjs/cli && pnpm install --save-dev @types/node) \
|| (npm install --global @nestjs/cli && npm install --save-dev @types/node)

COPY . .

RUN pnpm run build || npm run build

RUN pnpm prune || npm prune

USER node

# Production stage 
FROM gcr.io/distroless/nodejs22-debian12 AS production
WORKDIR /app

ENV NODE_ENV production

COPY --chown=node:node --from=build /app/package.json /app/pnpm-lock.yaml ./
COPY --chown=node:node --from=build /app/node_modules ./node_modules
COPY --chown=node:node --from=build /app/dist ./dist

CMD ["dist/main.js"]

EXPOSE 8000